{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","types/types.js","actions/ui.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SidebarGroup.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","controller","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","startLoading","finishLoading","fileUpload","file","a","AbortController","signal","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","abortFetching","e","abort","target","value","loadNotes","uid","collection","orderBy","get","notesSnap","notes","forEach","snapChild","push","id","data","Swal","fire","message","startUpdateNote","note","dispatch","getState","title","allowOutsideClick","showCancelButton","showConfirmButton","length","Error","url","noteToFiresote","doc","update","refreshNote","close","activeNote","setNotes","deleteNote","updateSidebarNotes","login","displayName","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","name","LoginScreen","useDispatch","loading","useSelector","state","ui","email","password","formValues","className","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","startLoginEmailPassword","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","excerptTitle","slice","excerptBody","document","querySelector","classList","toggle","style","backgroundSize","backgroundImage","format","JournalEntries","textAlign","map","SidebarGroup","React","memo","handleAddNote","mediaQuery","window","innerWidth","onresize","marginTop","padding","Sidebar","signOut","newNote","Date","getTime","add","docRef","NotesAppBar","active","accept","display","files","includes","startsWith","confirmButtonText","result","isConfirmed","fileUrl","startUploading","text","icon","confirmButtonColor","cancelButtonColor","delete","click","NoteScreen","activeId","useRef","useEffect","current","rel","href","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","color","composeEnhancers","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6977b8bf.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAu8R2dliBO2nQ3pc5MvX0to1k8t2n7gtQ',\r\n  authDomain: 'react-practices-b915b.firebaseapp.com',\r\n  databaseURL: 'https://react-practices-b915b-default-rtdb.firebaseio.com',\r\n  projectId: 'react-practices-b915b',\r\n  storageBucket: 'react-practices-b915b.appspot.com',\r\n  messagingSenderId: '350501490135',\r\n  appId: '1:350501490135:web:c830a5bc1321bd4b22cf92',\r\n  measurementId: 'G-L53B3RPBQG'\r\n };\r\n\r\nconst firebaseConfigTesting = {\r\n  apiKey: 'AIzaSyB7C5OmgXO9-e5vLozqJuMhPJNaZsTnGSo',\r\n  authDomain: 'testing-databases-447ef.firebaseapp.com',\r\n  projectId: 'testing-databases-447ef',\r\n  storageBucket: 'testing-databases-447ef.appspot.com',\r\n  messagingSenderId: '462826107758',\r\n  appId: '1:462826107758:web:37ac34bd90b2898548c77f'\r\n};\r\n\r\nif( process.env.NODE_ENV === 'test' ) {\r\n  // testing\r\n  firebase.initializeApp(firebaseConfigTesting);\r\n} else {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n\r\n// Initialize Firebase\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { db, googleAuthProvider, firebase}","\r\n// abort signal\r\nlet controller\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n   controller = new AbortController()\r\n   const signal = controller.signal\r\n   \r\n   const cloudUrl = 'https://api.cloudinary.com/v1_1/dtwc8wdqx/upload'\r\n\r\n   const formData = new FormData()\r\n   formData.append('upload_preset', 'react-app')\r\n   formData.append('file', file)\r\n\r\n   try {\r\n      const resp = await fetch(cloudUrl, {\r\n         method: 'POST',\r\n         body: formData,\r\n         signal\r\n      })\r\n      if(resp.ok) {\r\n         const cloudResp = await resp.json()\r\n         return cloudResp.secure_url\r\n      } else {\r\n         return null\r\n      }\r\n   } catch (error) {\r\n      return null\r\n   }\r\n\r\n} \r\n\r\nexport const abortFetching = (e) => {\r\n   controller.abort()\r\n   e.target.value = ''\r\n}","\r\nexport const types = {\r\n   login : '[Auth] login',\r\n   logout: '[Auth] logout',\r\n\r\n   uiSetError: '[UI] Set Error',\r\n   uiRemoveError: '[UI] Remove Error',\r\n   uiStartLoading: '[UI] Start loading',\r\n   uiFinishLoading: '[UI] Finish loading',\r\n\r\n   notesAddNew: '[Notes] New note',\r\n   notesActive: '[Notes] Set active note',\r\n   notesLoad: '[Notes] Load notes',\r\n   notesUpdated: '[Notes] Update note',\r\n   notesFileUrl: '[Notes] Update image url',\r\n   notesDelete: '[Notes] Delete note',\r\n   notesLogoutCleaning: '[Notes] Logout cleaning',\r\n   notesUpdateSidebar: '[Notes] Update Sidebar'\r\n   \r\n}","import { types } from '../types/types'\r\n\r\nexport const setError = ( err ) => ({\r\n   type: types.uiSetError,\r\n   payload: err\r\n})\r\nexport const removeError = () => ({\r\n   type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n   type: types.uiStartLoading,\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n   type: types.uiFinishLoading,\r\n})\r\n","import Swal from 'sweetalert2';\r\nimport { db } from '../firebase/firebase-config'\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n   try {\r\n      const notesSnap = await db.collection(`journal-users/${uid}/notes`).orderBy('date', 'desc').get()\r\n      const notes = [];\r\n   \r\n      notesSnap.forEach( snapChild => {\r\n         notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n         })\r\n      })\r\n      return notes\r\n      \r\n   } catch (error) {\r\n      Swal.fire('Something went wrong', error.message, 'error')\r\n      \r\n   }\r\n\r\n}","import Swal from 'sweetalert2'\r\nimport { db } from '../firebase/firebase-config'\r\nimport { abortFetching, fileUpload } from '../helpers/fileUpload'\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { types } from '../types/types'\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'LOADING...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: false\r\n      })\r\n\r\n      const maxNotesLimitPerUser = 10\r\n\r\n      try {\r\n         // limit notes per user\r\n         const { notes } = getState().notes\r\n         if(notes.length >= maxNotesLimitPerUser) throw new Error(`Maximum notes per user is ${maxNotesLimitPerUser}`)\r\n\r\n         const { uid } = getState().auth\r\n         \r\n\r\n         const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n         }\r\n         \r\n         const docRef = await db.collection(`journal-users/${uid}/notes`).add(newNote)\r\n         dispatch( activeNote(docRef.id, newNote))\r\n         dispatch( updateSidebarNotes(docRef.id, newNote))\r\n         Swal.close()\r\n         Swal.fire('Created, start writing!', newNote.title, 'success')\r\n         document.querySelector('main').classList.add('toggle')\r\n         \r\n      } catch (error) {\r\n         \r\n         Swal.close()\r\n         Swal.fire('Failed', error.message , 'error')\r\n         document.querySelector('main').classList.add('toggle')\r\n\r\n         return error.message\r\n      }\r\n   }\r\n}\r\n\r\nexport const startUpdateNote = (note) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'Updating...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: false\r\n      })\r\n\r\n      const limitNoteBodyLength = 4000;\r\n\r\n      try {\r\n         if(note.body.length > limitNoteBodyLength) throw new Error(`Maximum digits per body-note is ${limitNoteBodyLength}, your note has ${note.body.length} digits`)\r\n\r\n         const { uid } = getState().auth\r\n\r\n         if(!note.url) delete note.url\r\n\r\n         const noteToFiresote = {...note}\r\n         delete noteToFiresote.id\r\n\r\n         await db.doc(`journal-users/${uid}/notes/${note.id}`).update( noteToFiresote )\r\n      \r\n         dispatch( refreshNote( note.id, noteToFiresote) )\r\n         Swal.close()\r\n         Swal.fire('Saved', note.title, 'success')\r\n      } catch (error) {\r\n         Swal.close()\r\n         Swal.fire('Error', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\nexport const startUploading = (file, e) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      let abort = false\r\n      \r\n      Swal.fire({\r\n         title: 'Uploading...',\r\n         allowOutsideClick: false,\r\n         showCancelButton: false,\r\n         showConfirmButton: true,\r\n         confirmButtonText: 'Cancel'\r\n      }).then( result => {\r\n         if( result.isConfirmed ) {\r\n            abortFetching(e)\r\n            abort = true\r\n         }\r\n      })\r\n\r\n      try {\r\n         const { active:activeNote } = getState().notes\r\n         \r\n         const fileUrl = await fileUpload(file)\r\n         activeNote.url = fileUrl\r\n\r\n         if( !abort ) {\r\n            dispatch( startUpdateNote(activeNote))\r\n         }\r\n\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\nexport const startDeleteNote = (id) => {\r\n   return async(dispatch, getState) => {\r\n\r\n      Swal.fire({\r\n         title: 'Are you sure?',\r\n         // eslint-disable-next-line quotes\r\n         text: \"You won't be able to revert this!\",\r\n         icon: 'warning',\r\n         showCancelButton: true,\r\n         confirmButtonColor: '#3085d6',\r\n         cancelButtonColor: '#d33',\r\n         confirmButtonText: 'Yes, delete it!'\r\n      }).then( async(result) => {\r\n         if (result.isConfirmed) {\r\n            Swal.fire({\r\n               title: 'Deleting...',\r\n               allowOutsideClick: false,\r\n               showCancelButton: false,\r\n               showConfirmButton: false\r\n            })\r\n            \r\n            try {\r\n               const { uid } = getState().auth\r\n               await db.doc(`journal-users/${uid}/notes/${id}`).delete()\r\n               dispatch( deleteNote(id))\r\n\r\n               Swal.close()\r\n               Swal.fire(\r\n                  'Deleted!',\r\n                  'Your file has been deleted.',\r\n                  'success'\r\n               )\r\n            } catch (error) {\r\n               Swal.fire('Something went wrong', error.message, 'error')\r\n            }\r\n            \r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n   return async(dispatch) => {\r\n      try {\r\n         const notes = await loadNotes(uid)\r\n         dispatch(setNotes(notes))\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n      \r\n   }\r\n}\r\n\r\n// No async actions\r\n\r\nexport const activeNote = (id, note) => ({\r\n   type: types.notesActive,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const setNotes = ( notes ) => ({\r\n   type: types.notesLoad,\r\n   payload: notes\r\n})\r\n\r\nexport const refreshNote = (id, note) => ({\r\n   type: types.notesUpdated,\r\n   payload: {\r\n      id,\r\n      note: {\r\n         id,\r\n         ...note\r\n      }\r\n   }\r\n})\r\n\r\nexport const deleteNote = (id) => ({\r\n   type: types.notesDelete,\r\n   payload: id\r\n})\r\n\r\nexport const updateSidebarNotes = (id,note) => ({\r\n   type: types.notesUpdateSidebar,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const notesCleanLogout = () => ({\r\n   type: types.notesLogoutCleaning\r\n})\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { notesCleanLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n   return (dispatch) => {\r\n      dispatch(startLoading())\r\n\r\n      return firebase.auth().signInWithEmailAndPassword(email, password)\r\n         .then( ({user}) => {\r\n            dispatch( login( user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n            \r\n         } )\r\n         .catch(err => {\r\n            Swal.fire('Something went wrong', err.message, 'error')\r\n            dispatch(finishLoading())\r\n         })\r\n   }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n   return (dispatch) => {\r\n      dispatch(startLoading())\r\n      firebase.auth().createUserWithEmailAndPassword(email, password)\r\n         .then( async({user}) => {\r\n\r\n            await user.updateProfile({displayName: name})\r\n            dispatch( login(user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n\r\n         } )\r\n         .catch( err => {\r\n            Swal.fire('Something went wrong', err.message, 'error')\r\n            dispatch(finishLoading())\r\n         })\r\n   }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n   return ( dispatch ) => {\r\n      firebase.auth().signInWithPopup( googleAuthProvider )\r\n         .then( ({ user }) => {\r\n            dispatch( login( user.uid, user.displayName) )\r\n         })\r\n         .catch(err =>  Swal.fire('Something went wrong', err.message, 'error'))\r\n   }\r\n}\r\n\r\nexport const startLogout = () => {\r\n   return async(dispatch) => {\r\n      try {\r\n         await firebase.auth().signOut();\r\n         dispatch( logout() )\r\n         dispatch( notesCleanLogout() )\r\n      } catch (error) {\r\n         Swal.fire('Something went wrong', error.message, 'error')\r\n      }\r\n   }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n   type: types.login,\r\n   payload: {\r\n      uid,\r\n      displayName\r\n   }\r\n})\r\n\r\nexport const logout = () => ({\r\n   type: types.logout\r\n})\r\n","import { useState } from 'react'\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const {loading} = useSelector(state => state.ui)\n    \n    const initialFormState = {\n        email: '',\n        password: ''\n    }\n    const [ formValues , handleInputChange ] = useForm(initialFormState)\n    const { email, password } = formValues\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        dispatch( startLoginEmailPassword( email, password ) )\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() )\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin}>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    id=\"login-btn\"\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div\n                        id=\"google-btn\" \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator'\nimport { Link } from 'react-router-dom';\n\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch()\n    const { loading ,msgError } = useSelector(state => state.ui)\n\n    const initialFormState = {\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    }\n    const [ formValues , handleInputChange ] = useForm(initialFormState)\n    const { name, email, password, password2 } = formValues\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        if( isFormValid() ) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\n        }\n    }\n\n    const isFormValid = () => {\n\n        if( name.trim().length === 0 ) {\n            dispatch( setError('Invalid Name') )\n            return false\n        } else if ( !validator.isEmail( email )) {\n            dispatch( setError('Invalid Email') )\n            return false\n        } else if ( password !== password2 || password.length < 5) {\n            dispatch( setError('password is to short or does not match') )\n            return false\n        } else if ( name.trim().length > 40 ) {\n            dispatch( setError('Name is too long') )\n            return false\n        }\n        dispatch( removeError() )\n        return true\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={handleRegister}>\n            {\n                msgError && \n                <div className=\"auth__alert-error\">\n                    {msgError}\n                </div>\n            }\n                \n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    disabled={loading}\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import moment from 'moment'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { activeNote } from '../../actions/notes'\n\nexport const JournalEntry = ({id, date, title, body, url}) => {\n    const dispatch = useDispatch()\n    const noteDate = moment(date)\n\n    const handleEntryClick = () => {\n        dispatch( activeNote(id, {date, title, body, url}) )\n        document.querySelector('main').classList.toggle('toggle')\n    }\n    \n    let excerptTitle = ''\n    if( title.length > 30 ) excerptTitle = title.slice( 0, 30 ) + '...'\n    else excerptTitle = title\n\n    let excerptBody = ''\n    if( body.length > 50 ) excerptBody = body.slice( 0, 50 ) + '...'\n    else excerptBody = body\n\n    return (\n        <div \n            className=\"journal__entry pointer\"\n            onClick={handleEntryClick}\n        >\n           \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { excerptTitle }\n                </p>\n                <p className=\"journal__entry-content\">\n                    { excerptBody }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('MMMM')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n           \n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n\n    if( notes.length === 0 ) {\n        return <div style={{textAlign: 'center'}} className=\"journal__entries\">Notes...</div>\n    }\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const SidebarGroup = React.memo(({handleAddNote}) => {\r\n\r\n   const handleShow = () => {\r\n      document.querySelector('main').classList.toggle('toggle')\r\n   }\r\n   let mediaQuery = window.innerWidth < 650;\r\n   window.onresize = () => {\r\n      mediaQuery = window.innerWidth < 650;\r\n   }\r\n   mediaQuery = window.innerWidth < 650\r\n\r\n   return (\r\n      <>\r\n      <div className=\"journal__new-entry\"\r\n         onClick={handleAddNote}>\r\n  \r\n            <i className=\"far fa-calendar-plus fa-4x\"></i>\r\n            <p className=\"mt-5\">\r\n               New Note\r\n            </p>\r\n      </div>\r\n      {\r\n         mediaQuery &&\r\n         <button className=\"btn btn-primary-light\" style={{marginTop: '1.2rem', padding: '.5rem 1rem'}} onClick={handleShow}>Notes</button> \r\n      }\r\n\r\n      <JournalEntries />    \r\n         \r\n      </>\r\n   )\r\n})\r\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { JournalEntries } from './JournalEntries'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { SidebarGroup } from './SidebarGroup';\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const {name} = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    const handleAddNote = () => {\n        dispatch( startNewNote() )\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button \n                className=\"btn\"\n                onClick={handleLogout}\n                id=\"logout-button\"\n                >\n                    Logout\n                </button>\n            </div>\n            \n            <SidebarGroup handleAddNote={handleAddNote} />\n\n        </aside>\n    )\n}\n","import moment from 'moment'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport { startDeleteNote, startUpdateNote, startUploading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const {active} = useSelector(state => state.notes)\n\n    const dispatch = useDispatch()\n\n    const handleUpdate = () => {\n        dispatch( startUpdateNote( active ) )\n    }\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click()\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0]\n        if( ( file.name.includes('.png') || file.name.includes('.jpg') || file.name.includes('.jpeg') ) && file.type.startsWith('image') && e.target.files.length < 2 ) {\n            dispatch( startUploading(file, e))\n            e.target.value = ''\n        } else {\n            e.target.value = ''\n            Swal.fire('Error', 'The file must be an image, jpg, png or jpeg', 'error')\n        }\n    }\n\n    const handleDelete = () => {\n        dispatch( startDeleteNote(active.id) )\n    }\n\n\n    return (\n        <div className=\"notes__appbar\" id=\"appbar\">\n            <span>{moment(new Date()).format('MMM Do YY')}</span>\n\n            <input\n                id=\"fileSelector\" \n                name='file'\n                type=\"file\"\n                accept=\"image/jpg, image/png, image/jpeg\"\n                style={{display: 'none'}}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button className=\"btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Delete\n                </button>\n\n                <button className=\"btn btn-primary\"\n                    onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={handleUpdate}\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NotesAppBar } from './NotesAppBar'\nimport {useForm} from '../../hooks/useForm'\nimport { activeNote } from '../../actions/notes'\n\nexport const NoteScreen = () => {\n    const dispatch = useDispatch()\n\n    const {active: note} = useSelector(state => state.notes)\n\n\n    const activeId = useRef(note.id)\n    \n    const [ formValues, handleInputChange, reset ] = useForm(note)\n    const {body, title } = formValues\n\n\n    useEffect(() => {\n        if( note.id !== activeId.current ) {\n            reset( note )\n            activeId.current = note.id\n        }\n    }, [note, reset])\n    \n    useEffect(() => {\n        dispatch( activeNote( formValues.id, { ...formValues }) )\n    }, [formValues, dispatch])\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some cool title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    name=\"title\"\n                    onChange={handleInputChange}\n                    \n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    name=\"body\"\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    note.url \n                    &&\n                    \n                    <div className=\"notes__image\">\n                        <a rel=\"noreferrer\" href={note.url} target=\"_blank\">\n                        <img \n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                        </a>\n                    </div>\n                    \n                }\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                or create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n    \n\n    const {active} = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n\n            <main>\n                {\n                    active\n                    ? <NoteScreen />\n                    : <NothingSelected />\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRedirect\n} from 'react-router-dom';\nimport { firebase } from '../firebase/firebase-config'\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n\tconst dispatch = useDispatch()\n\n\tconst [checking, setChecking] = useState(true)\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\t\n\tuseEffect(() => {\n\n\t\tfirebase.auth().onAuthStateChanged( (user) => {\n\t\t\tif(user?.uid) {\n\n\t\t\t\tdispatch( login( user.uid, user.displayName))\n\t\t\t\tsetIsLoggedIn( true )\n\t\t\t\tdispatch( startLoadingNotes(user.uid) )\n\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn( false )\n\t\t\t}\n\t\t\tsetChecking(false)\n\t\t} )\n\t}, [dispatch])\n\n\n\tif( checking ) return <h2 style={{color: 'white'}} >Wait</h2>\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<PublicRoute \n\t\t\t\t\t\t\tpath=\"/auth\"\n\t\t\t\t\t\t\tcomponent={ AuthRouter }\n\t\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<PrivateRoute \n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\tcomponent={ JournalScreen }\n\t\t\t\t\t\t\tisAuthenticated={isLoggedIn}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Redirect to=\"/auth/login\" />\n\n\n\t\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n","import { types } from '../types/types'\r\n\r\n\r\n\r\nconst initialState = {\r\n   notes: [],\r\n   active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case types.notesActive:\r\n         return {\r\n            ...state,\r\n            active: {\r\n               ...action.payload\r\n            }\r\n         }\r\n      case types.notesLoad:\r\n         return {\r\n            ...state,\r\n            notes: [ ...action.payload ]\r\n         }\r\n      case types.notesUpdated:\r\n         return {\r\n            ...state,\r\n            notes: state.notes.map(\r\n               note => note.id === action.payload.id\r\n               ? action.payload.note\r\n               : note\r\n\r\n            )\r\n         }\r\n      case types.notesDelete:\r\n         return {\r\n            ...state,\r\n            active: null,\r\n            notes: state.notes.filter( note => note.id !== action.payload )\r\n         }\r\n      case types.notesUpdateSidebar: \r\n         return {\r\n            ...state,\r\n            notes: [ action.payload, ...state.notes ]\r\n         }\r\n      case types.notesLogoutCleaning:\r\n         return {\r\n            ...initialState\r\n         }\r\n   \r\n      default:\r\n         return state\r\n   }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   loading: false,\r\n   msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case types.uiSetError:\r\n         return {\r\n            ...state,\r\n            msgError: action.payload\r\n         }\r\n      case types.uiRemoveError:\r\n         return {\r\n            ...state,\r\n            msgError: null\r\n         }\r\n      case types.uiStartLoading:\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         }\r\n      case types.uiFinishLoading:\r\n         return {\r\n            ...state,\r\n            loading: false\r\n         }\r\n         \r\n      default:\r\n         return state\r\n   }\r\n\r\n}","import { combineReducers, compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n   auth: authReducer,\r\n   ui: uiReducer,\r\n   notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n   reducers,\r\n   composeEnhancers(\r\n      applyMiddleware( thunk )\r\n   )\r\n)","import { types } from '../types/types';\r\n\r\n /*\r\n   {\r\n      uid: fjf49f94\r\n      name: userNameName\r\n   }\r\n*/\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n   \r\n   switch (action.type) {\r\n      case types.login:\r\n         return {\r\n            uid: action.payload.uid,\r\n            name: action.payload.displayName\r\n         }\r\n      case types.logout:\r\n         return { }\r\n   \r\n      default:\r\n         return state\r\n   }\r\n\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n// TODO check the page on mobile\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}